CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `purchase_details` AS select `purchases`.`purchase_id` AS `purchase_id`,`purchases`.`product_id` AS `product_id`,`purchases`.`payment_id` AS `payment_id`,`purchases`.`quantity` AS `quantity`,`purchases`.`total_cost` AS `total_cost`,`purchases`.`discount` AS `discount`,`purchases`.`recorded_by` AS `recorded_by`,`purchases`.`modified_by` AS `modified_by`,`purchases`.`create_date` AS `create_date`,`purchases`.`modified_date` AS `modified_date`,`purchases`.`active` AS `active`,`purchases`.`suspended` AS `suspended`,`product_details`.`product` AS `product`,`product_details`.`category_id` AS `category_id`,`product_details`.`category_name` AS `category_name`,`product_details`.`owner_id` AS `owner_id`,`product_details`.`user_id` AS `user_id`,`product_details`.`owner_active` AS `owner_active`,`product_details`.`owner_suspended` AS `owner_suspended`,`product_details`.`status` AS `product_status`,`payment_details`.`payfor_id` AS `payfor_id`,`payment_details`.`pay_for` AS `pay_for`,`payment_details`.`method_id` AS `method_id`,`payment_details`.`method` AS `method`,`payment_details`.`active` AS `payment_active`,`payment_details`.`suspended` AS `payment_suspended`,`payment_details`.`status` AS `payment_status`,(case when (`recorder_details`.`full_name` = '') then `recorder_details`.`owner_full_name` else `recorder_details`.`full_name` end) AS `recorder_name`,`recorder_details`.`status` AS `recorder_status`,`recorder_details`.`department_id` AS `recorder_department_id`,`recorder_details`.`department` AS `recorder_department`,(case when (`modifier_details`.`full_name` = '') then `modifier_details`.`owner_full_name` else `modifier_details`.`full_name` end) AS `modifier_name`,`modifier_details`.`status` AS `modifier_status`,`modifier_details`.`department_id` AS `modifier_department_id`,`modifier_details`.`department` AS `modifier_department`,(case when ((`purchases`.`suspended` = 1) or (`payment_details`.`suspended` = 1)) then 'Purchase Suspended by Admin' when (`purchases`.`active` = 0) then 'Purchase Removed by StakeHolder' else 'Purchase Active' end) AS `status` from ((((`purchases` join `product_details` on((`purchases`.`product_id` = `product_details`.`product_id`))) join `payment_details` on((`payment_details`.`payment_id` = `purchases`.`payment_id`))) join `user_details` `recorder_details` on((`recorder_details`.`user_id` = `purchases`.`recorded_by`))) join `user_details` `modifier_details` on((`modifier_details`.`user_id` = `purchases`.`recorded_by`)))