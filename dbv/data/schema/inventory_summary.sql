CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `inventory_summary` AS select `products`.`product_id` AS `product_id`,`products`.`product` AS `product`,`products`.`category_id` AS `category_id`,`products`.`cost_per_unit` AS `cost_per_unit`,`products`.`owner_id` AS `owner_id`,`products`.`create_date` AS `create_date`,`products`.`modified_date` AS `modified_date`,`products`.`active` AS `active`,`products`.`suspended` AS `suspended`,`user_details`.`suspended` AS `owner_suspended`,`user_details`.`owner_active` AS `owner_active`,`categories`.`category_name` AS `category_name`,ifnull(`purchases`.`purchase_quantity`,0) AS `purchase_quantity`,ifnull(`purchases`.`average_purchase_quantity`,0) AS `average_purchase_quantity`,ifnull(`purchases`.`purchase_cost`,0) AS `purchase_cost`,ifnull(`purchases`.`average_purchase_cost_per_purchase`,0) AS `average_purchase_cost_per_purchase`,ifnull(`purchases`.`discount_received`,0) AS `discount_received`,ifnull(`purchases`.`average_discount_received_per_purchase`,0) AS `average_discount_received_per_purchase`,ifnull(`sales`.`sale_quantity`,0) AS `sale_quantity`,ifnull(`sales`.`average_sale_quantity_per_sale`,0) AS `average_sale_quantity_per_sale`,ifnull(`sales`.`sale_revenue`,0) AS `sale_revenue`,ifnull(`sales`.`average_sale_revenue_per_sale`,0) AS `average_sale_revenue_per_sale`,ifnull(`sales`.`discount_allowed`,0) AS `discount_allowed`,ifnull(`sales`.`average_discount_allowed_per_sale`,0) AS `average_discount_allowed_per_sale`,(ifnull(`purchases`.`purchase_quantity`,0) - ifnull(`sales`.`sale_quantity`,0)) AS `inventory_level`,least(ifnull(`products`.`cost_per_unit`,0),((ifnull(`purchases`.`purchase_cost`,0) + ifnull(`purchases`.`discount_received`,0)) / ifnull(`purchases`.`purchase_quantity`,1))) AS `inventory_cost`,((ifnull(`sales`.`sale_quantity`,0) * least(ifnull(`products`.`cost_per_unit`,0),((ifnull(`purchases`.`purchase_cost`,0) + ifnull(`purchases`.`discount_received`,0)) / ifnull(`purchases`.`purchase_quantity`,1)))) / greatest((((ifnull(`purchases`.`purchase_quantity`,0) - ifnull(`sales`.`sale_quantity`,0)) * least(ifnull(`products`.`cost_per_unit`,0),((ifnull(`purchases`.`purchase_cost`,0) + ifnull(`purchases`.`discount_received`,0)) / ifnull(`purchases`.`purchase_quantity`,1)))) / 2),1)) AS `inventory_turn_over` from ((((`products` left join `purchase_summary` `purchases` on((`purchases`.`product_id` = `products`.`product_id`))) left join `sale_summary` `sales` on((`sales`.`product_id` = `products`.`product_id`))) left join `user_details` on((`user_details`.`id_owner` = `products`.`owner_id`))) left join `categories` on((`products`.`category_id` = `categories`.`category_id`))) group by `products`.`product_id` order by `products`.`product_id`